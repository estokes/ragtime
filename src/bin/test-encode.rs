use anyhow::Result;
use ragtime::{db::EmbedDb, doc::ChunkId};

fn test_encode() -> Result<()> {
    const BASE: &str = "/home/eric/proj/bge-m3/onnx";
    const ESIZE: usize = 1024; // the size of the sentence embedding generated by the model
    let mut edb = EmbedDb::new(
        &format!("{BASE}/model.onnx"),
        &format!("{BASE}/tokenizer.json"),
        ESIZE,
    )?;
    edb.add(vec![
        (ChunkId::new(), "I've got a lovely bunch of coconuts".into()),
        (ChunkId::new(), "I like coconuts very much".into()),
        (
            ChunkId::new(),
            "A goomba is a character from super mario bros".into(),
        ),
    ])?;
    let m = edb.search("who here likes coconuts?".into(), 3)?;
    println!("{m:?}");
    Ok(())
}

pub fn main() -> Result<()> {
    tracing_subscriber::fmt::init();
    ort::init().commit()?;
    test_encode()
}
